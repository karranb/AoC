input = """...s..............................................
...................w......K.......t...............
........s.........................................
.......s......w...............1...................
.........w5.......................................
.......................t.F........................
..................................................
F................................1...........d....
.........................5......................K.
............5.................R..............KZ...
....F.....q.........w..............1.....t........
............8.......I.............................
..........8.................t....................K
...........8.................5.....Z..............
.........q..............................Z...d..U..
...................Y.q...R........................
....................E.....z...............y.......
..........................................U.......
.....F.................................k........S.
............q...................d.................
.................................R................
..x....................................U.........y
.......x.........................E..M...U..d......
......z.......X............................4......
...............I....m....M......R............y....
.......z...................................k..e...
..f..z.......................................e....
...f.I..........7..u..........M................D..
.......X..I.......x.................k.............
.........X.......7....................4.......S...
....................u9...T.....3.Z....o..........6
........f.......D..3....u..................S......
...W...0.........................................D
.....................T................E.......m...
...8....Y............f........T4..................
......Y...........................................
....0.............3...............................
....................3.T.....................k.....
.......................u..............6...........
...........................6..........9........e..
..................4....7.............o..........D.
.................................M...E..o.........
...i.................O...........................Q
.....0.i.....................................m.2..
.......Y.r........7..............S..O..2.......m..
.....r......0.............O.......................
..................................Q...............
........................6................o......Q.
..W...r.................................9.........
.W.........................O........2............."""

lines = input.split("\n")

antennas = {}

for i, line in enumerate(lines):
    for j, char in enumerate(line):
        if char != ".":
            antennas[char] = antennas.get(char, []) + [(i, j)]


from itertools import permutations


def get_distance(point1, point2):
    x1, y1 = point1
    x2, y2 = point2
    return abs(x1 - x2) + abs(y1 - y2)


def get_are_collinear(point1, point2, point3):
    x1, y1 = point1
    x2, y2 = point2
    x3, y3 = point3
    return (y1 - y2) * (x1 - x3) == (y1 - y3) * (x1 - x2)


all_permutations = []
for antennas_values in antennas.values():
    all_permutations += permutations(antennas_values, 2)


antinodes = set()

for i, line in enumerate(lines):
    for j, char in enumerate(line):
        for permutation in all_permutations:
            (
                point1,
                point2,
            ) = permutation
            point3 = (i, j)
            if get_are_collinear(point1, point2, point3):
                distance1 = get_distance(point1, point3)
                distance2 = get_distance(point2, point3)
                if distance1 == distance2 * 2 or distance2 == distance1 * 2:
                    antinodes.add(point3)
print("result1", len(antinodes))

antinodes = set()

for i, line in enumerate(lines):
    for j, char in enumerate(line):
        for permutation in all_permutations:
            (
                point1,
                point2,
            ) = permutation
            point3 = (i, j)
            if get_are_collinear(point1, point2, point3):
                antinodes.add(point3)
print("result2", len(antinodes))
